<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

 
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<array>
				<value>classpath:service-config.ini</value>
				<value>classpath:mvn/env.properties</value>
			</array>
		</property>
	</bean>
<bean class="com.yetoop.cloud.atlas.common.SpringContextUtil"></bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>i18n/exception</value>
			</list>
		</property>
	</bean>

	<!-- 声明驱动 -->
	<context:annotation-config />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 目录扫描 -->
	<context:component-scan base-package="com.yetoop。cloud.atlas" />
	<!-- 引入数据源 -->
	<import resource="classpath:spring/druid-datasource.xml" />

	<!-- 事務配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="globalRollbackOnParticipationFailure" value="false" />

	</bean>
	<!-- mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-conf.xml" />
		<property name="typeAliasesPackage" value="com.yetoop.cloud.atlas.domain" />
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<bean name="mapperScannerConfigurerConfig" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yetoop.cloud.atlas.domain.persistence" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="new*" timeout="120" rollback-for="Exception" />
			<tx:method name="log*" timeout="120" rollback-for="Exception" />

			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="newTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>

			<tx:method name="*" propagation="REQUIRED" timeout="120" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>	
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* com.yetoop.cloud.atlas.service..*ServiceImpl.*(..))" />
		<aop:advisor advice-ref="newTxAdvice"
			pointcut="execution(* com.yetoop.colud.atlas.service..*BusiServiceImpl.*(..))" />			
	</aop:config>
</beans>